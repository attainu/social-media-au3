{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\social-media-au3\\\\frontend\\\\src\\\\components\\\\signin.js\";\nimport React, { useState } from 'react';\nimport useForm from './useForm';\nimport validate from './SignInFormValidationRules';\n\nconst axios = require('axios');\n\nfunction SignIn() {\n  const {\n    values,\n    errors,\n    handleSubmit,\n    handleChange\n  } = useForm(signup, validate);\n  const [error, setError] = useState(false);\n\n  function signup() {\n    console.log(values);\n    /* axios.post('/create', values)\r\n    .then(res => {\r\n        setError(false);\r\n        localStorage.setItem('token', res.data.token);\r\n    })\r\n    .catch(err => console.log(err)); */\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"SignInEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: `form-control form-control-sm ${errors.email && \"is-invalid\"}`,\n    id: \"SignInEmail\",\n    value: values.email || \"\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), errors.email && React.createElement(\"small\", {\n    id: \"SignInEmailHelp\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"SignInPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: `form-control form-control-sm ${errors.password && \"is-invalid\"}`,\n    id: \"SignInPassword\",\n    value: values.password || \"\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), errors.password && React.createElement(\"small\", {\n    id: \"SignInPasswordHelp\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign In\"));\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/hp/Desktop/social-media-au3/frontend/src/components/signin.js"],"names":["React","useState","useForm","validate","axios","require","SignIn","values","errors","handleSubmit","handleChange","signup","error","setError","console","log","email","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,MAAT,GAAkB;AAEd,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA;AAAhC,MAAgDR,OAAO,CAACS,MAAD,EAASR,QAAT,CAA7D;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASU,MAAT,GAAkB;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA;;;;;;AAMH;;AAED,SACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,SAAS,EAAG,gCAA+BD,MAAM,CAACQ,KAAP,IAAgB,YAAa,EAAzG;AAA4G,IAAA,EAAE,EAAC,aAA/G;AAA6H,IAAA,KAAK,EAAET,MAAM,CAACS,KAAP,IAAgB,EAApJ;AAAwJ,IAAA,QAAQ,EAAEN,YAAlK;AAAgL,IAAA,QAAQ,MAAxL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKF,MAAM,CAACQ,KAAP,IAAiB;AAAO,IAAA,EAAE,EAAC,iBAAV;AAA4B,IAAA,SAAS,EAAC,uBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+DR,MAAM,CAACQ,KAAtE,CAHtB,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,SAAS,EAAG,gCAA+BR,MAAM,CAACS,QAAP,IAAmB,YAAa,EAAlH;AAAqH,IAAA,EAAE,EAAC,gBAAxH;AAAyI,IAAA,KAAK,EAAEV,MAAM,CAACU,QAAP,IAAmB,EAAnK;AAAuK,IAAA,QAAQ,EAAEP,YAAjL;AAA+L,IAAA,QAAQ,MAAvM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKF,MAAM,CAACS,QAAP,IAAoB;AAAO,IAAA,EAAE,EAAC,oBAAV;AAA+B,IAAA,SAAS,EAAC,uBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkET,MAAM,CAACS,QAAzE,CAHzB,CANJ,EAWI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,CADJ;AAeH;;AAED,eAAeX,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport useForm from './useForm'\r\nimport validate from './SignInFormValidationRules'\r\n\r\nconst axios = require('axios');\r\n\r\nfunction SignIn() {\r\n\r\n    const { values, errors, handleSubmit, handleChange} = useForm(signup, validate);\r\n    const [error, setError] = useState(false);\r\n\r\n    function signup() {\r\n        console.log(values);\r\n        /* axios.post('/create', values)\r\n        .then(res => {\r\n            setError(false);\r\n            localStorage.setItem('token', res.data.token);\r\n        })\r\n        .catch(err => console.log(err)); */\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"SignInEmail\">Email address</label>\r\n                <input type=\"email\" name=\"email\" className={`form-control form-control-sm ${errors.email && \"is-invalid\"}`} id=\"SignInEmail\" value={values.email || \"\"} onChange={handleChange} required/>\r\n                {errors.email && (<small id=\"SignInEmailHelp\" className=\"form-text text-danger\">{errors.email}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"SignInPassword\">Password</label>\r\n                <input type=\"password\" name=\"password\" className={`form-control form-control-sm ${errors.password && \"is-invalid\"}`} id=\"SignInPassword\" value={values.password || \"\"} onChange={handleChange} required/>\r\n                {errors.password && (<small id=\"SignInPasswordHelp\" className=\"form-text text-danger\">{errors.password}</small>)}\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Sign In</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}