{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\hp\\\\Desktop\\\\social-media-au3\\\\frontend\\\\src\\\\components\\\\signin.js\";\nimport React, { useState, useContext } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../index';\nimport useForm from './useForm';\nimport validate from './SignInFormValidationRules';\n\nconst axios = require('axios');\n\nfunction SignIn() {\n  const {\n    values,\n    errors,\n    handleSubmit,\n    handleChange\n  } = useForm(signin, validate);\n  const [error, setError] = useState(false);\n  const {\n    email,\n    setEmail\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  function signin() {\n    // setEmail({})\n    console.log(values);\n    axios.post('/signin', values).then(res => {\n      setError(false);\n      localStorage.setItem('token', res.data.token);\n      history.push(\"/app/profile\");\n    }).catch(err => setError(true));\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error && React.createElement(Alert, {\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Invalid User\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"SignInEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"Email\",\n    className: `form-control form-control-sm ${errors.Email && \"is-invalid\"}`,\n    id: \"SignInEmail\",\n    value: values.Email || \"\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), errors.Email && React.createElement(\"small\", {\n    id: \"SignInEmailError\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, errors.Email)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"SignInPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"Password\",\n    className: `form-control form-control-sm ${errors.Password && \"is-invalid\"}`,\n    id: \"SignInPassword\",\n    value: values.Password || \"\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), errors.Password && React.createElement(\"small\", {\n    id: \"SignInPasswordError\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, errors.Password)), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign In\"));\n}\n\nexport default SignIn;","map":{"version":3,"sources":["c:/Users/hp/Desktop/social-media-au3/frontend/src/components/signin.js"],"names":["React","useState","useContext","Alert","useHistory","UserContext","useForm","validate","axios","require","SignIn","values","errors","handleSubmit","handleChange","signin","error","setError","email","setEmail","history","console","log","post","then","res","localStorage","setItem","data","token","push","catch","err","Email","Password"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { UserContext } from '../index'\r\nimport useForm from './useForm'\r\nimport validate from './SignInFormValidationRules'\r\n\r\nconst axios = require('axios');\r\n\r\nfunction SignIn() {\r\n\r\n    const { values, errors, handleSubmit, handleChange} = useForm(signin, validate);\r\n    const [error, setError] = useState(false);\r\n    const { email, setEmail } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    function signin() {\r\n        // setEmail({})\r\n        console.log(values);\r\n        axios.post('/signin', values)\r\n        .then(res => {\r\n            setError(false);\r\n            localStorage.setItem('token', res.data.token);\r\n            history.push(\"/app/profile\");\r\n        })\r\n        .catch(err => setError(true));\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {\r\n                error && (\r\n                    <Alert variant=\"danger\">\r\n                        Invalid User\r\n                    </Alert>\r\n                )\r\n            }\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"SignInEmail\">Email address</label>\r\n                <input type=\"email\" name=\"Email\" className={`form-control form-control-sm ${errors.Email && \"is-invalid\"}`} id=\"SignInEmail\" value={values.Email || \"\"} onChange={handleChange} required/>\r\n                {errors.Email && (<small id=\"SignInEmailError\" className=\"form-text text-danger\">{errors.Email}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"SignInPassword\">Password</label>\r\n                <input type=\"password\" name=\"Password\" className={`form-control form-control-sm ${errors.Password && \"is-invalid\"}`} id=\"SignInPassword\" value={values.Password || \"\"} onChange={handleChange} required/>\r\n                {errors.Password && (<small id=\"SignInPasswordError\" className=\"form-text text-danger\">{errors.Password}</small>)}\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success\">Sign In</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}