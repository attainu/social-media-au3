{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\hp\\\\Desktop\\\\social-media-au3\\\\frontend\\\\src\\\\components\\\\profileform.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport useForm from './useForm';\nimport validate from './rules//UpdateFormValidationRules';\nimport { EditContext } from './profile';\n\nconst axios = require('axios');\n\nfunction ProfileForm(props) {\n  const {\n    values,\n    errors,\n    handleSubmit,\n    handleChange\n  } = useForm(update, validate);\n  const [location, setLocation] = useState({\n    country: \"\",\n    state: \"\"\n  });\n  const [fields, setFields] = useState({\n    Name: \"\",\n    Email: \"\",\n    Username: \"\",\n    DOB: \"\",\n    Country: \"\",\n    State: \"\",\n    Gender: \"\"\n  });\n  const {\n    allowEdit,\n    setallowEdit\n  } = useContext(EditContext);\n  const history = useHistory();\n  useEffect(() => {\n    console.log(props.userdata);\n    setFields({ ...fields,\n      Name: props.userdata.Name,\n      Email: props.userdata.Email,\n      Username: props.userdata.Username,\n      DOB: props.userdata.DOB,\n      Country: props.userdata.Country,\n      State: props.userdata.State,\n      Gender: props.userdata.Gender\n    });\n  }, []);\n\n  function updateLocation() {\n    axios.get('https://freegeoip.app/json/').then(res => {\n      setLocation({ ...fields,\n        Country: res.data.country_name,\n        State: res.data.region_name\n      });\n    }).catch(err => console.log(err));\n  }\n\n  function update() {\n    setallowEdit(true);\n    console.log({ ...values,\n      Country: location.country,\n      State: location.state\n    });\n    const data = { ...values,\n      Country: location.country,\n      State: location.state\n    };\n    axios.put(`/update/${JSON.parse(localStorage.getItem('user')).email}`, data, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('user')).token\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      localStorage.clear();\n      history.push(\"/sign\");\n    });\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ProfileName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Full Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Name\",\n    className: `form-control form-control-sm ${errors.Name && \"is-invalid\"}`,\n    id: \"ProfileName\",\n    value: values.Name || (values.Name = fields.Name),\n    onChange: handleChange,\n    required: true,\n    readOnly: allowEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), errors.Name && React.createElement(\"small\", {\n    id: \"ProfileNameError\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, errors.Name)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ProfileEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"Email\",\n    className: `form-control form-control-sm ${errors.Email && \"is-invalid\"}`,\n    id: \"ProfileEmail\",\n    value: values.Email || (values.Email = fields.Email),\n    onChange: handleChange,\n    required: true,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), errors.Email && React.createElement(\"small\", {\n    id: \"ProfileEmailError\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, errors.Email)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ProfileUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Username\",\n    className: `form-control form-control-sm ${errors.Username && \"is-invalid\"}`,\n    id: \"ProfileUsername\",\n    value: values.Username || (values.Username = fields.Username),\n    onChange: handleChange,\n    required: true,\n    readOnly: allowEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), errors.Username && React.createElement(\"small\", {\n    id: \"ProfileUsernameError\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, errors.Username)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ProfilePassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"Password\",\n    className: `form-control form-control-sm ${errors.Password && \"is-invalid\"}`,\n    id: \"ProfilePassword\",\n    value: values.Password || \"\",\n    onChange: handleChange,\n    readOnly: allowEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), errors.Password && React.createElement(\"small\", {\n    id: \"ProfilePasswordError\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, errors.Password)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ProfileDOB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Date of Birth\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"DOB\",\n    className: `form-control form-control-sm ${errors.DOB && \"is-invalid\"}`,\n    id: \"ProfileDOB\",\n    value: values.DOB || (values.DOB = fields.DOB),\n    onChange: handleChange,\n    required: true,\n    readOnly: allowEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), errors.DOB && React.createElement(\"small\", {\n    id: \"ProfileDOB\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, errors.DOB)), React.createElement(\"div\", {\n    className: \"form-row align-items-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: allowEdit ? \"form-group col-md-6 col-sm-6\" : \"form-group col-md-5 col-sm-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ProfileCountry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Country\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Country\",\n    className: \"form-control form-control-sm\",\n    id: \"ProfileCountry\",\n    value: location.country || (location.country = fields.Country),\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-6 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ProfileState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"State\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"State\",\n    className: \"form-control form-control-sm\",\n    id: \"ProfileState\",\n    value: location.state || (location.state = fields.State),\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), allowEdit ? \"\" : React.createElement(\"div\", {\n    className: \"form-group col-md-1 col-sm-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"warning\",\n    size: \"sm\",\n    onClick: () => updateLocation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    style: {\n      pointerEvents: \"none\"\n    },\n    className: \"fas fa-angle-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"mr-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"Gender\",\n    id: \"ProfileMale\",\n    value: \"Male\",\n    onChange: e => setFields({ ...fields,\n      Gender: e.target.value\n    }),\n    checked: fields.Gender === \"Male\" && (values.Gender = fields.Gender),\n    disabled: allowEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"ProfileMale\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Male\")), React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"Gender\",\n    id: \"ProfileFemale\",\n    value: \"Female\",\n    onChange: e => setFields({ ...fields,\n      Gender: e.target.value\n    }),\n    checked: fields.Gender === \"Female\" && (values.Gender = fields.Gender),\n    disabled: allowEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"ProfileFemale\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Female\")), errors.Gender && React.createElement(\"small\", {\n    id: \"ProfileGenderError\",\n    className: \"form-text text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, errors.Gender)), allowEdit ? \"\" : React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"sm\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Save\"));\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["c:/Users/hp/Desktop/social-media-au3/frontend/src/components/profileform.js"],"names":["React","useState","useEffect","useContext","useHistory","Button","useForm","validate","EditContext","axios","require","ProfileForm","props","values","errors","handleSubmit","handleChange","update","location","setLocation","country","state","fields","setFields","Name","Email","Username","DOB","Country","State","Gender","allowEdit","setallowEdit","history","console","log","userdata","updateLocation","get","then","res","data","country_name","region_name","catch","err","put","JSON","parse","localStorage","getItem","email","headers","token","clear","push","Password","pointerEvents","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport useForm from './useForm'\r\nimport validate from './rules//UpdateFormValidationRules'\r\nimport { EditContext } from './profile'\r\n\r\nconst axios = require('axios')\r\n\r\nfunction ProfileForm(props) {\r\n\r\n    const { values, errors, handleSubmit, handleChange} = useForm(update, validate);\r\n\r\n    const [location, setLocation] = useState({\r\n        country: \"\",\r\n        state: \"\"\r\n    });\r\n    \r\n    const [ fields, setFields ] = useState({\r\n        Name: \"\",\r\n        Email: \"\",\r\n        Username: \"\",\r\n        DOB: \"\",\r\n        Country: \"\",\r\n        State: \"\",\r\n        Gender: \"\"\r\n    })\r\n\r\n    const { allowEdit, setallowEdit } = useContext(EditContext);\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        console.log(props.userdata);\r\n        setFields({\r\n            ...fields,\r\n            Name: props.userdata.Name,\r\n            Email: props.userdata.Email,\r\n            Username: props.userdata.Username,\r\n            DOB: props.userdata.DOB,\r\n            Country: props.userdata.Country,\r\n            State: props.userdata.State,\r\n            Gender: props.userdata.Gender\r\n        })\r\n    }, [])\r\n\r\n    function updateLocation() {\r\n        axios.get('https://freegeoip.app/json/')\r\n        .then(res => {\r\n            setLocation({...fields, Country: res.data.country_name, State: res.data.region_name});\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    function update() {\r\n        setallowEdit(true);\r\n        console.log({...values, Country: location.country, State: location.state});\r\n\r\n        const data = {...values, Country: location.country, State: location.state};\r\n        axios.put(`/update/${JSON.parse(localStorage.getItem('user')).email}`, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('user')).token\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            localStorage.clear();\r\n            history.push(\"/sign\");\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileName\">Full Name</label>\r\n                <input type=\"text\" name=\"Name\" className={`form-control form-control-sm ${errors.Name && \"is-invalid\"}`} id=\"ProfileName\" value={values.Name || (values.Name = fields.Name)} onChange={handleChange} required readOnly={allowEdit}/>\r\n                {errors.Name && (<small id=\"ProfileNameError\" className=\"form-text text-danger\">{errors.Name}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileEmail\">Email address</label>\r\n                <input type=\"email\" name=\"Email\" className={`form-control form-control-sm ${errors.Email && \"is-invalid\"}`} id=\"ProfileEmail\" value={values.Email || (values.Email = fields.Email)} onChange={handleChange} required readOnly/>\r\n                {errors.Email && (<small id=\"ProfileEmailError\" className=\"form-text text-danger\">{errors.Email}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileUsername\">Username</label>\r\n                <input type=\"text\" name=\"Username\" className={`form-control form-control-sm ${errors.Username && \"is-invalid\"}`} id=\"ProfileUsername\" value={values.Username || (values.Username = fields.Username)} onChange={handleChange} required readOnly={allowEdit}/>\r\n                {errors.Username && (<small id=\"ProfileUsernameError\" className=\"form-text text-danger\">{errors.Username}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfilePassword\">Password</label>\r\n                <input type=\"password\" name=\"Password\" className={`form-control form-control-sm ${errors.Password && \"is-invalid\"}`} id=\"ProfilePassword\" value={values.Password || \"\"} onChange={handleChange} readOnly={allowEdit}/>\r\n                {errors.Password && (<small id=\"ProfilePasswordError\" className=\"form-text text-danger\">{errors.Password}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileDOB\">Date of Birth</label>\r\n                <input type=\"date\" name=\"DOB\" className={`form-control form-control-sm ${errors.DOB && \"is-invalid\"}`} id=\"ProfileDOB\" value={values.DOB || (values.DOB = fields.DOB)} onChange={handleChange} required readOnly={allowEdit}/>\r\n                {errors.DOB && (<small id=\"ProfileDOB\" className=\"form-text text-danger\">{errors.DOB}</small>)}\r\n            </div>\r\n            <div className=\"form-row align-items-end\">\r\n                <div className={allowEdit ? \"form-group col-md-6 col-sm-6\" : \"form-group col-md-5 col-sm-5\"}>\r\n                    <label htmlFor=\"ProfileCountry\">Country</label>\r\n                    <input type=\"text\" name=\"Country\" className=\"form-control form-control-sm\" id=\"ProfileCountry\" value={location.country || (location.country = fields.Country)} readOnly/>\r\n                </div>\r\n                <div className=\"form-group col-md-6 col-sm-6\">\r\n                    <label htmlFor=\"ProfileState\">State</label>\r\n                    <input type=\"text\" name=\"State\" className=\"form-control form-control-sm\" id=\"ProfileState\" value={location.state || (location.state = fields.State)} readOnly/>\r\n                </div>\r\n                {\r\n                    allowEdit ? (\"\") : (\r\n                        <div className=\"form-group col-md-1 col-sm-1\">\r\n                            <Button variant='warning' size='sm' onClick={() => updateLocation()}><i style={{pointerEvents: \"none\"}} className=\"fas fa-angle-up\"/></Button>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"mr-3\">Gender</label>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name=\"Gender\" id=\"ProfileMale\" value=\"Male\" onChange={(e) => setFields({...fields, Gender: e.target.value})} checked={(fields.Gender === \"Male\") && (values.Gender = fields.Gender)} disabled={allowEdit}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"ProfileMale\">Male</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name=\"Gender\" id=\"ProfileFemale\" value=\"Female\" onChange={(e) => setFields({...fields, Gender: e.target.value})} checked={(fields.Gender === \"Female\") && (values.Gender = fields.Gender)} disabled={allowEdit}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"ProfileFemale\">Female</label>\r\n                </div>\r\n                {errors.Gender && (<small id=\"ProfileGenderError\" className=\"form-text text-danger\">{errors.Gender}</small>)}\r\n            </div>\r\n            {\r\n                allowEdit ? (\"\") : (<Button type='submit' variant='success' size='sm' block>Save</Button>)\r\n            }\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProfileForm;"]},"metadata":{},"sourceType":"module"}