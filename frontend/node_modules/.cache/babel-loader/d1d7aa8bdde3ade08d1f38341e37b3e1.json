{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\hp\\\\Desktop\\\\social-media-au3\\\\frontend\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Sign from './components/sign';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport const UserContext = React.createContext();\n\nfunction SocialMe() {\n  const doRedirect = () => {\n    let loggedIn = localStorage.getItem('user');\n\n    if (loggedIn != undefined) {\n      return React.createElement(Redirect, {\n        to: \"/app/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Redirect, {\n        to: \"/sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n  };\n\n  const [email, setEmail] = useState(\"\");\n  return React.createElement(UserContext.Provider, {\n    value: {\n      email,\n      setEmail\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/sign\",\n    component: Sign,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/app\",\n    component: App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), doRedirect()));\n}\n\nReactDOM.render(React.createElement(SocialMe, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["c:/Users/hp/Desktop/social-media-au3/frontend/src/index.js"],"names":["React","useState","ReactDOM","BrowserRouter","Router","Route","Redirect","Sign","App","UserContext","createContext","SocialMe","doRedirect","loggedIn","localStorage","getItem","undefined","email","setEmail","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAyD,kBAAzD;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAO,sCAAP;AAEA,OAAO,MAAMC,WAAW,GAAGT,KAAK,CAACU,aAAN,EAApB;;AAEP,SAASC,QAAT,GAAoB;AAChB,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;;AAEA,QAAGF,QAAQ,IAAIG,SAAf,EAA0B;AACtB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAGK;AACD,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GATD;;AAWA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACgB,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEX,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAEC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKI,UAAU,EAHf,CADJ,CADJ;AASH;;AAEDV,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA6BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7B","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport Sign from './components/sign'\nimport App from './components/app'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const UserContext = React.createContext();\n\nfunction SocialMe() {\n    const doRedirect = () => {\n        let loggedIn = localStorage.getItem('user');\n\n        if(loggedIn != undefined) {\n            return <Redirect to=\"/app/profile\"/>\n        }\n        else {\n            return <Redirect to=\"/sign\"/>\n        }\n    }\n\n    const [email, setEmail] = useState(\"\");\n\n    return (\n        <UserContext.Provider value={{email, setEmail}}>\n            <Router>\n                <Route path=\"/sign\" component={Sign}/>\n                <Route path=\"/app\" component={App}/>\n                {doRedirect()}\n            </Router>\n        </UserContext.Provider>\n    )\n}\n\nReactDOM.render(<SocialMe/>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}