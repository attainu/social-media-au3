{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport useForm from './useForm';\nimport validate from './rules//UpdateFormValidationRules';\n\nfunction ProfileForm(props) {\n  const {\n    values,\n    errors,\n    handleSubmit,\n    handleChange\n  } = useForm(update, validate);\n  const [location, setLocation] = useState({\n    country: \"\",\n    state: \"\"\n  });\n  useEffect(() => {\n    console.log(props);\n  });\n\n  function update() {\n    console.log(values);\n  }\n\n  const [allowEdit, setallowEdit] = useState(false);\n  return {\n    /* <form onSubmit={handleSubmit}>\r\n       <div className=\"form-group\">\r\n           <label htmlFor=\"ProfileName\">Full Name</label>\r\n           <input type=\"text\" name=\"Name\" className={`form-control form-control-sm ${errors.Name && \"is-invalid\"}`} id=\"ProfileName\" value={values.Name || \"\"} onChange={handleChange} required/>\r\n           {errors.Name && (<small id=\"ProfileNameError\" className=\"form-text text-danger\">{errors.Name}</small>)}\r\n       </div>\r\n       <div className=\"form-group\">\r\n           <label htmlFor=\"ProfileEmail\">Email address</label>\r\n           <input type=\"email\" name=\"Email\" className={`form-control form-control-sm ${errors.Email && \"is-invalid\"}`} id=\"ProfileEmail\" value={values.Email || \"\"} onChange={handleChange} required/>\r\n           {errors.Email && (<small id=\"ProfileEmailError\" className=\"form-text text-danger\">{errors.Email}</small>)}\r\n       </div>\r\n       <div className=\"form-group\">\r\n           <label htmlFor=\"ProfileUsername\">Username</label>\r\n           <input type=\"text\" name=\"Username\" className={`form-control form-control-sm ${errors.Username && \"is-invalid\"}`} id=\"ProfileUsername\" value={values.Username || \"\"} onChange={handleChange} required/>\r\n           {errors.Username && (<small id=\"ProfileUsernameError\" className=\"form-text text-danger\">{errors.Username}</small>)}\r\n       </div>\r\n       <div className=\"form-group\">\r\n           <label htmlFor=\"ProfilePassword\">Password</label>\r\n           <input type=\"password\" name=\"Password\" className={`form-control form-control-sm ${errors.Password && \"is-invalid\"}`} id=\"ProfilePassword\" value={values.Password || \"\"} onChange={handleChange} required/>\r\n           {errors.Password && (<small id=\"ProfilePasswordError\" className=\"form-text text-danger\">{errors.Password}</small>)}\r\n       </div>\r\n       <div className=\"form-group\">\r\n           <label htmlFor=\"ProfileDOB\">Date of Birth</label>\r\n           <input type=\"date\" name=\"DOB\" className={`form-control form-control-sm ${errors.DOB && \"is-invalid\"}`} id=\"ProfileDOB\" value={values.DOB || \"\"} onChange={handleChange} required/>\r\n           {errors.DOB && (<small id=\"ProfileDOB\" className=\"form-text text-danger\">{errors.DOB}</small>)}\r\n       </div>\r\n       <div className=\"form-row\">\r\n           <div className=\"form-group col-md-6\">\r\n               <label htmlFor=\"ProfileCountry\">Country</label>\r\n               <input type=\"text\" name=\"Country\" className=\"form-control form-control-sm\" id=\"ProfileCountry\" value={location.country || \"\"} onChange={handleChange} required/>\r\n           </div>\r\n           <div className=\"form-group col-md-6\">\r\n               <label htmlFor=\"ProfileState\">State</label>\r\n               <input type=\"text\" name=\"State\" className=\"form-control form-control-sm\" id=\"ProfileState\" value={location.state || \"\"} onChange={handleChange} required/>\r\n           </div>\r\n       </div>\r\n       <div className=\"form-group\">\r\n           <label className=\"mr-3\">Gender</label>\r\n           <div className=\"form-check form-check-inline\">\r\n               <input className=\"form-check-input\" type=\"radio\" name=\"Gender\" id=\"ProfileMale\" value=\"Male\" onChange={handleChange}/>\r\n               <label className=\"form-check-label\" htmlFor=\"ProfileMale\">Male</label>\r\n           </div>\r\n           <div className=\"form-check form-check-inline\">\r\n               <input className=\"form-check-input\" type=\"radio\" name=\"Gender\" id=\"ProfileFemale\" value=\"Female\" onChange={handleChange}/>\r\n               <label className=\"form-check-label\" htmlFor=\"ProfileFemale\">Female</label>\r\n           </div>\r\n           {errors.Gender && (<small id=\"ProfileGenderError\" className=\"form-text text-danger\">{errors.Gender}</small>)}\r\n       </div>\r\n       <Button type=\"submit\" variant=\"success\" size=\"sm\" block>Save</Button>\r\n    </form> */\n  };\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["c:/Users/hp/Desktop/social-media-au3/frontend/src/components/profileform.js"],"names":["React","useState","useEffect","Button","useForm","validate","ProfileForm","props","values","errors","handleSubmit","handleChange","update","location","setLocation","country","state","console","log","allowEdit","setallowEdit"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA;AAAhC,MAAgDP,OAAO,CAACQ,MAAD,EAASP,QAAT,CAA7D;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACrCc,IAAAA,OAAO,EAAE,EAD4B;AAErCC,IAAAA,KAAK,EAAE;AAF8B,GAAD,CAAxC;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,GAFQ,CAAT;;AAIA,WAASK,MAAT,GAAkB;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACH;;AACD,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AAEA,SACI;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAD,GADJ;AAoDH;;AAED,eAAeK,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport useForm from './useForm'\r\nimport validate from './rules//UpdateFormValidationRules'\r\n\r\nfunction ProfileForm(props) {\r\n\r\n    const { values, errors, handleSubmit, handleChange} = useForm(update, validate);\r\n    const [location, setLocation] = useState({\r\n        country: \"\",\r\n        state: \"\"\r\n    });\r\n    \r\n    useEffect(() => {\r\n        console.log(props);\r\n    })\r\n\r\n    function update() {\r\n        console.log(values);\r\n    }\r\n    const [allowEdit, setallowEdit] = useState(false);\r\n\r\n    return (\r\n        {/* <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileName\">Full Name</label>\r\n                <input type=\"text\" name=\"Name\" className={`form-control form-control-sm ${errors.Name && \"is-invalid\"}`} id=\"ProfileName\" value={values.Name || \"\"} onChange={handleChange} required/>\r\n                {errors.Name && (<small id=\"ProfileNameError\" className=\"form-text text-danger\">{errors.Name}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileEmail\">Email address</label>\r\n                <input type=\"email\" name=\"Email\" className={`form-control form-control-sm ${errors.Email && \"is-invalid\"}`} id=\"ProfileEmail\" value={values.Email || \"\"} onChange={handleChange} required/>\r\n                {errors.Email && (<small id=\"ProfileEmailError\" className=\"form-text text-danger\">{errors.Email}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileUsername\">Username</label>\r\n                <input type=\"text\" name=\"Username\" className={`form-control form-control-sm ${errors.Username && \"is-invalid\"}`} id=\"ProfileUsername\" value={values.Username || \"\"} onChange={handleChange} required/>\r\n                {errors.Username && (<small id=\"ProfileUsernameError\" className=\"form-text text-danger\">{errors.Username}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfilePassword\">Password</label>\r\n                <input type=\"password\" name=\"Password\" className={`form-control form-control-sm ${errors.Password && \"is-invalid\"}`} id=\"ProfilePassword\" value={values.Password || \"\"} onChange={handleChange} required/>\r\n                {errors.Password && (<small id=\"ProfilePasswordError\" className=\"form-text text-danger\">{errors.Password}</small>)}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"ProfileDOB\">Date of Birth</label>\r\n                <input type=\"date\" name=\"DOB\" className={`form-control form-control-sm ${errors.DOB && \"is-invalid\"}`} id=\"ProfileDOB\" value={values.DOB || \"\"} onChange={handleChange} required/>\r\n                {errors.DOB && (<small id=\"ProfileDOB\" className=\"form-text text-danger\">{errors.DOB}</small>)}\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"ProfileCountry\">Country</label>\r\n                    <input type=\"text\" name=\"Country\" className=\"form-control form-control-sm\" id=\"ProfileCountry\" value={location.country || \"\"} onChange={handleChange} required/>\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"ProfileState\">State</label>\r\n                    <input type=\"text\" name=\"State\" className=\"form-control form-control-sm\" id=\"ProfileState\" value={location.state || \"\"} onChange={handleChange} required/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"mr-3\">Gender</label>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name=\"Gender\" id=\"ProfileMale\" value=\"Male\" onChange={handleChange}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"ProfileMale\">Male</label>\r\n                </div>\r\n                <div className=\"form-check form-check-inline\">\r\n                    <input className=\"form-check-input\" type=\"radio\" name=\"Gender\" id=\"ProfileFemale\" value=\"Female\" onChange={handleChange}/>\r\n                    <label className=\"form-check-label\" htmlFor=\"ProfileFemale\">Female</label>\r\n                </div>\r\n                {errors.Gender && (<small id=\"ProfileGenderError\" className=\"form-text text-danger\">{errors.Gender}</small>)}\r\n            </div>\r\n            <Button type=\"submit\" variant=\"success\" size=\"sm\" block>Save</Button>\r\n        </form> */}\r\n    )\r\n}\r\n\r\nexport default ProfileForm;"]},"metadata":{},"sourceType":"module"}